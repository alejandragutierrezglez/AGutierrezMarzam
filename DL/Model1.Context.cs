//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AGutierrezMarzamEntities : DbContext
    {
        public AGutierrezMarzamEntities()
            : base("name=AGutierrezMarzamEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<ClienteMedicamento> ClienteMedicamentoes { get; set; }
        public virtual DbSet<Medicamento> Medicamentoes { get; set; }
    
        public virtual int ClienteAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string username, string password)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int ClienteDelete(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteDelete", idClienteParameter);
        }
    
        public virtual ObjectResult<ClienteGetAll_Result> ClienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetAll_Result>("ClienteGetAll");
        }
    
        public virtual ObjectResult<ClienteGetById_Result> ClienteGetById(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetById_Result>("ClienteGetById", idClienteParameter);
        }
    
        public virtual int ClienteUpdate(Nullable<int> idCliente, string nombre, string apellidoPaterno, string apellidoMaterno, string username, string password)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteUpdate", idClienteParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ClienteGetByUsername_Result> ClienteGetByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetByUsername_Result>("ClienteGetByUsername", usernameParameter);
        }
    
        public virtual int ClienteMedicamentoDelete(Nullable<int> idCliente, Nullable<int> idSKUMedicamento)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idSKUMedicamentoParameter = idSKUMedicamento.HasValue ?
                new ObjectParameter("IdSKUMedicamento", idSKUMedicamento) :
                new ObjectParameter("IdSKUMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteMedicamentoDelete", idClienteParameter, idSKUMedicamentoParameter);
        }
    
        public virtual int MedicamentoAdd(Nullable<decimal> precio, string nombre, string imagen)
        {
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicamentoAdd", precioParameter, nombreParameter, imagenParameter);
        }
    
        public virtual int MedicamentoDelete(Nullable<int> idSKUMedicamento)
        {
            var idSKUMedicamentoParameter = idSKUMedicamento.HasValue ?
                new ObjectParameter("IdSKUMedicamento", idSKUMedicamento) :
                new ObjectParameter("IdSKUMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicamentoDelete", idSKUMedicamentoParameter);
        }
    
        public virtual ObjectResult<MedicamentoGetAll_Result> MedicamentoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicamentoGetAll_Result>("MedicamentoGetAll");
        }
    
        public virtual ObjectResult<MedicamentoGetById_Result> MedicamentoGetById(Nullable<int> idSKUMedicamento)
        {
            var idSKUMedicamentoParameter = idSKUMedicamento.HasValue ?
                new ObjectParameter("IdSKUMedicamento", idSKUMedicamento) :
                new ObjectParameter("IdSKUMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicamentoGetById_Result>("MedicamentoGetById", idSKUMedicamentoParameter);
        }
    
        public virtual ObjectResult<MedicamentosGetByIdCliente_Result> MedicamentosGetByIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicamentosGetByIdCliente_Result>("MedicamentosGetByIdCliente", idClienteParameter);
        }
    
        public virtual int MedicamentoUpdate(Nullable<int> idSKUMedicamento, Nullable<decimal> precio, string nombre, string imagen)
        {
            var idSKUMedicamentoParameter = idSKUMedicamento.HasValue ?
                new ObjectParameter("IdSKUMedicamento", idSKUMedicamento) :
                new ObjectParameter("IdSKUMedicamento", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicamentoUpdate", idSKUMedicamentoParameter, precioParameter, nombreParameter, imagenParameter);
        }
    
        public virtual int ClienteMedicamentoAdd(Nullable<int> idCliente, Nullable<int> idSKUMedicamento)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idSKUMedicamentoParameter = idSKUMedicamento.HasValue ?
                new ObjectParameter("IdSKUMedicamento", idSKUMedicamento) :
                new ObjectParameter("IdSKUMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteMedicamentoAdd", idClienteParameter, idSKUMedicamentoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConteoTotalMedicamentosByCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConteoTotalMedicamentosByCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SumaTotalAPagarByCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SumaTotalAPagarByCliente", idClienteParameter);
        }
    
        public virtual int ClienteMedicamentoPedidosDelete(Nullable<int> idClienteMedicamento)
        {
            var idClienteMedicamentoParameter = idClienteMedicamento.HasValue ?
                new ObjectParameter("IdClienteMedicamento", idClienteMedicamento) :
                new ObjectParameter("IdClienteMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteMedicamentoPedidosDelete", idClienteMedicamentoParameter);
        }
    }
}
